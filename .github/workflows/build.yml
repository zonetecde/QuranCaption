name: Build Tauri Apps

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest] # Removed ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # macOS setup
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install p7zip

      - name: Download yt-dlp (macos)
        if: matrix.os == 'macos-latest'
        run: |
          curl -L -o yt-dlp https://github.com/yt-dlp/yt-dlp/releases/download/2025.04.30/yt-dlp_macos
          chmod +x yt-dlp
          mv yt-dlp src-tauri/binaries/yt-dlp

      - name: Download and extract ffprobe and ffmpeg (macos)
        if: matrix.os == 'macos-latest'
        run: |
          curl -L -o ffprobe.7z https://evermeet.cx/ffmpeg/ffprobe-119416-g1dbc5675c1.7z
          curl -L -o ffmpeg.7z https://evermeet.cx/ffmpeg/ffmpeg-119416-g1dbc5675c1.7z
          7z e -y ffprobe.7z -osrc-tauri/binaries
          7z e -y ffmpeg.7z -osrc-tauri/binaries
          chmod +x src-tauri/binaries/ffprobe
          chmod +x src-tauri/binaries/ffmpeg

      - name: Download yt-dlp (windows)
        if: matrix.os == 'windows-latest'
        run: |
          curl -L -o yt-dlp.exe https://github.com/yt-dlp/yt-dlp/releases/download/2025.03.31/yt-dlp.exe
          chmod +x yt-dlp.exe
          mv yt-dlp.exe src-tauri/binaries/yt-dlp.exe

      # Setup Python and PyInstaller for Windows
      - name: Setup Python and PyInstaller
        if: matrix.os == 'windows-latest'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install PyInstaller
        if: matrix.os == 'windows-latest'
        run: |
          pip install pyinstaller
      - name: Build video creator script
        if: matrix.os == 'windows-latest'
        run: |
          cd src-tauri/video-creator
          chmod +x build_win.bat
          ./build_win.bat
          move dist\video_creator.exe ..\binaries\video_creator.exe

      # Video creator script for macOS
      # QuranCaption-2\src\lib\functions\export_scripts\build_mac.sh
      # Once built, the file located in src-tauri\video-creator\dist\video_creator must be moved to src-tauri/binaries
      - name: Build video creator script (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd src-tauri/video-creator
          chmod +x build_mac.sh
          ./build_mac.sh
          mv dist/video_creator ../binaries/video_creator

      - name: Patch time crate
        working-directory: src-tauri
        run: cargo update -p time --precise 0.3.35

      - name: Install app dependencies
        run: npm install

      - name: Build the app
        run: npm run tauri build --verbose

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: 'Quran Caption (MacOS)'
          path: src-tauri/target/release/bundle/**/Quran Caption.app

      - name: Upload Windows Installer (MacOS)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: 'Quran Caption (Windows)'
          path: src-tauri/target/release/bundle/nsis/Quran Caption_*_x64-setup.exe
