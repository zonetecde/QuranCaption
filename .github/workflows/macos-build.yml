name: Build Tauri Apps

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest, windows-latest] # Removed ubuntu-latest
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # macOS setup
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg
          brew install p7zip

      - name: Download yt-dlp
        if: matrix.os == 'macos-latest' # Removed Linux condition
        run: |
          curl -L -o yt-dlp https://github.com/yt-dlp/yt-dlp/releases/download/2025.03.31/yt-dlp_linux
          chmod +x yt-dlp
          mv yt-dlp src-tauri/yt-dlp

      - name: Download and extract ffprobe (Linux)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p src-tauri
          curl -L -o ffmpeg.tar.xz https://johnvansickle.com/ffmpeg/releases/ffmpeg-release-amd64-static.tar.xz
          tar -xf ffmpeg.tar.xz
          cp ffmpeg-*/ffprobe src-tauri/ffprobe
          chmod +x src-tauri/ffprobe

      # Windows setup
      - name: Install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ffmpeg -y

      # FFprobe extraction for Windows and macOS
      - name: Download and extract ffprobe.exe
        run: |
          curl -L -o ffmpeg.7z https://www.gyan.dev/ffmpeg/builds/ffmpeg-git-essentials.7z
          7z e -y ffmpeg.7z -i'!*/bin/ffprobe.exe' -osrc-tauri

      - name: Patch time crate
        working-directory: src-tauri
        run: cargo update -p time --precise 0.3.35

      - name: Install app dependencies
        run: npm install

      - name: Build the app
        run: npm run tauri build --verbose

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: 'Quran Caption MacOS.app'
          path: src-tauri/target/release/bundle/**/Quran Caption.app

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: 'Quran Caption Windows.exe'
          path: src-tauri/target/release/bundle/**/Quran Caption.exe
