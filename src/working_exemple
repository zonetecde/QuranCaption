import RecordRTC, { invokeSaveAsDialog } from 'recordrtc';

let canvas: HTMLCanvasElement;
let context: CanvasRenderingContext2D;
let video: HTMLVideoElement;

function renderFrame() {
	if (video.paused || video.ended) {
		return;
	}

	// Draw the current frame onto the canvas
	context.drawImage(video, 0, 0, canvas.width, canvas.height);

	// Call renderFrame recursively to render the next frame
	requestAnimationFrame(renderFrame);
}

onMount(async () => {
	console.log('VideoEditor mounted');

	// display the https://www.w3schools.com/html/mov_bbb.mp4 video in the canvas
	canvas = document.getElementById('canvas') as HTMLCanvasElement;
	context = canvas.getContext('2d')!;

	// Create a video element
	video = document.createElement('video');
	video.src = '/ok.mp4';
	video.autoplay = true;

	// Wait for the video to be loaded
	video.onloadedmetadata = function () {
		// Set canvas dimensions to match video dimensions
		canvas.width = video.videoWidth;
		canvas.height = video.videoHeight;

		// Start rendering frames
		renderFrame();
	};

	video.addEventListener('play', () => {
		let timer = setInterval(() => {
			if (!video.paused && !video.ended) {
				context.drawImage(
					video,
					0,
					0,
					video.videoWidth,
					video.videoHeight,
					0,
					0,
					canvas.width,
					canvas.height
				);
			} else {
				clearInterval(timer);
			}
		}, 1000 / 60);
	});

	await new Promise((resolve) => setTimeout(resolve, 2000));

	console.log('Recording started');

	var elementToRecord = document.getElementById('canvas') as HTMLCanvasElement;
	var recorder = new RecordRTC(elementToRecord, {
		type: 'canvas',
		mimeType: 'video/webm',
		audioBitsPerSecond: 128000,
		videoBitsPerSecond: 128000,

		timeSlice: 1000,
		ondataavailable: function (blob) {
			invokeSaveAsDialog(blob);
			console.log(blob);
		}
	});
	recorder.startRecording();

	// wait 5 seconds and stop recording
	await new Promise((resolve) => setTimeout(resolve, 3000));

	recorder.stopRecording(() => {
		var blob = recorder.getBlob();
		console.log(blob);
		var url = URL.createObjectURL(blob);
		var a = document.createElement('a');
		document.body.appendChild(a);
		a.href = url;
		a.download = 'test.webm';
		a.click();
		window.URL.revokeObjectURL(url);
	});
});

<canvas id="canvas" class="canvas w-2 h-2">
	{' '}
</canvas>;
