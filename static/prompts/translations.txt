**Task**:  
Programmatically map **multiple Arabic segments** (including overlapping ones) from a set of Quranic verses to their **exact, contiguous substrings** within pre-existing translations. For each verse in the input array, ensure every Arabic segment is matched to a direct substring of `existing_translation`, preserving overlaps and covering all words in the translation.

---

**Inputs**:  
An array of objects, where each object contains:  
1. `id` (number): A unique numeric identifier for each input object.
2. `full_verse_arabic` (string): The surah and verse number in the format "s:v" (e.g., "1:1" for Al-Fatiha verse 1).  
3. `target_segments_arabic` (array of strings): Arabic phrases to map, which are segments of the complete verse.  
4. `existing_translation` (string): The pre-translated text of the full verse in another language (e.g., French, English).  

**Input Structure**:  
```json
[
  {
    "id": 1,
    "full_verse_arabic": "s:v", // Format: "surah:verse", ex: "2:255"
    "target_segments_arabic": ["segment1", "segment2", ...],
    "existing_translation": "Translated verse text"
  },
  ...
]
```

---

**Output Requirements**:  
- Return a **JSON object** with numeric IDs as keys.
- Each key corresponds to the ID of one input object.
- Each value is an array containing the translations for the `target_segments_arabic` of that input, in the same order as provided.  
- For each segment:  
  - Return the **exact, contiguous substring** from `existing_translation` that corresponds to the Arabic segment.  
  - If no exact substring exists, return `null`.  
- **Output Format**: Pure JSON, no additional text.  

**Output Structure**:  
```json
{
  "1": ["translation_segment1", "translation_segment2", ...],
  "2": ["translation_segment1", "translation_segment2", ...],
  ...
}
```

---

**Core Rules**:

1. **Exact Substring Matching**:
   - Translations must be **verbatim, contiguous substrings** of `existing_translation`.
   - Do not reorder, split, or modify words in the translation.
   - Words enclosed in special brackets (e.g., `˹word˺`, `[word]`) within `existing_translation` are part of the text and **must be preserved** in the output segments. Do not omit or alter them.
   - Example:  
     - Arabic segment: `"قَالُوا خَيْرًا"`  
     - `existing_translation`: `"They say, "All the best!""`  
     - **Correct**: `"They say, "All the best!""`  
     - **Incorrect**: `""All the best!""` (omits context) or `"They say good"` (not verbatim).  

2. **Complete Coverage**:
   - The union of all non-null translation segments in the output **must meticulously and completely reconstruct the entire `existing_translation`** without any gaps, missing words, or alterations. Every word from `existing_translation` must appear in the output segments, correctly allocated.
   - Example:  
     - `existing_translation`: `"A B C D"`  
     - Valid: `["A B", "C D"]`, `["A", "B C D"]`, `["A B", "B C D"]` (overlap allowed).  
     - Invalid: `["A B", "D"]` (missing "C").  

3. **Overlapping Segments**:  
   - Overlapping Arabic segments must map to overlapping translation substrings, repeating words as needed.  
   - Each segment's translation must include **all words** corresponding to its Arabic text, even if previously included.  
   - Example:  
     - `full_verse_arabic`: `"1:5"`  
     - `target_segments_arabic`: `["إِيَّاكَ نَعْبُدُ", "نَعْبُدُ وَإِيَّاكَ"]`  
     - `existing_translation`: `"You alone we worship, and You alone we ask for help."`  
     - **Output**: `["You alone we worship", "worship, and You alone"]`  
     - **Explanation**: The word "worship" is repeated due to overlap in Arabic segments.  

4. **Context Preservation**:  
   - Include complete syntactic units (e.g., subjects, verbs, clauses) in the translation substring, even if the Arabic segment is partial, as long as it's contiguous.  
   - Example:  
     - Arabic segment: `"لَا تَأْخُذُهُ"`  
     - `existing_translation`: `"Neither drowsiness overtakes Him nor sleep."`  
     - **Correct**: `"Neither drowsiness overtakes Him"` (includes full clause).  
     - **Incorrect**: `"overtakes Him"` (incomplete clause).  

5. **No Truncation**:  
   - Ensure translations include **all words** corresponding to the Arabic segment's meaning and context.  
   - Example:  
     - Arabic segment: `"وَمَا يَنزِلُ مِنَ ٱلسَّمَآءِ وَمَا يَعۡرُجُ"`  
     - `existing_translation`: `"Il sait ce qui descend du ciel et ce qui y remonte."`  
     - **Correct**: `"ce qui descend du ciel et ce qui y remonte."`  
     - **Incorrect**: `"descend du ciel et ce qui"` (truncates phrase).  

6. **Handle Non-Contiguous Cases**:  
   - If an Arabic segment's translation is not a contiguous substring, return `null`.  
   - Example:  
     - Arabic segment: `"زِدْنِي عِلْمًا"` (non-contiguous in translation)  
     - `existing_translation`: `"My Lord, increase me in knowledge."`  
     - **Output**: `null` (if "increase me in knowledge" isn't contiguous).  

---

**Examples**:  

#### **Example 1: Overlapping Segments**  
- **Input**:  
  ```json
  {
    "id": 1,
    "full_verse_arabic": "34:2",
    "target_segments_arabic": ["يَعۡلَمُ مَا يَلِجُ فِي ٱلۡأَرۡضِ", "مَا يَلِجُ فِي ٱلۡأَرۡضِ وَمَا يَخۡرُجُ"],
    "existing_translation": "He knows what penetrates into the earth and what emerges from it."
  }
  ```  
- **Output**:  
  ```json
  {
    "1": ["He knows what penetrates into the earth", "what penetrates into the earth and what emerges from it."]
  }
  ```  
- **Explanation**: The second segment overlaps with the first, repeating "what penetrates into the earth".

#### **Example 2: Full and Partial Segments**  
- **Input**:  
  ```json
  {
    "id": 2,
    "full_verse_arabic": "34:1",
    "target_segments_arabic": ["ٱلۡحَمۡدُ لِلَّهِ", "ٱلَّذِي لَهُۥ مَا فِي ٱلسَّمَٰوَٰتِ"],
    "existing_translation": "Praise be to Allah, to Whom belongs whatever is in the heavens."
  }
  ```  
- **Output**:  
  ```json
  {
    "2": ["Praise be to Allah", "to Whom belongs whatever is in the heavens."]
  }
  ```  
- **Explanation**: Each segment maps to a distinct, contiguous substring, covering the full translation.

#### **Example 3: Multiple Verses with Overlaps**  
- **Input**:  
  ```json
  [
    {
      "id": 1,
      "full_verse_arabic": "2:255",
      "target_segments_arabic": ["لَا تَأْخُذُهُ", "تَأْخُذُهُ سِنَةٌ"],
      "existing_translation": "Neither drowsiness nor sleep overtakes Him."
    },
    {
      "id": 2,
      "full_verse_arabic": "1:5",
      "target_segments_arabic": ["إِيَّاكَ نَعْبُدُ", "نَعْبُدُ وَإِيَّاكَ"],
      "existing_translation": "You alone we worship and You alone we ask for help."
    }
  ]
  ```  
- **Output**:  
  ```json
  {
    "1": ["Neither drowsiness nor sleep overtakes Him", "sleep overtakes Him"],
    "2": ["You alone we worship", "worship and You alone"]
  }
  ```  
- **Explanation**: Overlaps in both verses repeat words ("sleep overtakes Him", "worship") to reflect Arabic segment overlaps.

#### **Example 4: Non-Mapping Segment**  
- **Input**:  
  ```json
  {
    "id": 3,
    "full_verse_arabic": "20:114",
    "target_segments_arabic": ["زِدْنِي عِلْمًا"],
    "existing_translation": "My Lord, increase me in knowledge."
  }
  ```  
- **Output**:  
  ```json
  {
    "3": [null]
  }
  ```  
- **Explanation**: The segment's translation ("increase me in knowledge") is not a contiguous substring due to word order, so it returns `null`.

#### **Example 5: Bracketed Words and Full Coverage**
- **Input**:
  ```json
  {
    "id": 5,
    "full_verse_arabic": "27:7",
    "target_segments_arabic": ["إِذۡ قَالَ مُوسَىٰ لِأَهۡلِهِۦٓ إِنِّيٓ ءَانَسۡتُ نَارٗا", "سَـَٔاتِيكُم مِّنۡهَا بِخَبَرٍ أَوۡ ءَاتِيكُم بِشِهَابٖ قَبَسٖ", "لَّعَلَّكُمۡ تَصۡطَلُونَ"],
    "existing_translation": "˹Remember˺ when Moses said to his family, “I have spotted a fire. I will either bring you some directions1 from there, or a burning torch so you may warm yourselves.”"
  }
  ```
- **Output**:
  ```json
  {
    "5": ["˹Remember˺ when Moses said to his family, “I have spotted a fire.", "I will either bring you some directions1 from there, or a burning torch", "so you may warm yourselves.”"]
  }
  ```
- **Explanation**: The bracketed word `˹Remember˺` is preserved. The `existing_translation` is fully covered by the output segments, which are contiguous substrings corresponding to the Arabic segments.

---

**Edge Cases**:  
- **Empty Translation**: If `existing_translation` is empty, return `{id: []}` for that input.  
- **No Matching Substrings**: If all segments lack contiguous matches, return an array of `null` values for that ID.  
- **Empty Input Array**: Return `{}`.  
- **Single Word Segments**: Map to single words if they correspond exactly, e.g., Arabic `"مَا"` to `"what"`.  

---

**Final Notes**:  
- Prioritize **verbatim substring accuracy** over translation continuity.  
- Overlaps are expected and must repeat words as needed.  
- Ensure **no truncation** of translations; include all words corresponding to the Arabic segment's meaning and context.  
- Validate that translations collectively cover the entire `existing_translation` without gaps.


# The input : 

@1
